<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quantum linear system problem | JUNHYUNG LYLE KIM</title>
    <link>https://jlylekim.github.io/tag/quantum-linear-system-problem/</link>
      <atom:link href="https://jlylekim.github.io/tag/quantum-linear-system-problem/index.xml" rel="self" type="application/rss+xml" />
    <description>quantum linear system problem</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Copyright 2024 Junhyung Lyle Kim</copyright><lastBuildDate>Wed, 24 Jul 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jlylekim.github.io/images/icon_hu6a253511a905c4c58ef48adc8d74e746_25674_512x512_fill_lanczos_center_2.png</url>
      <title>quantum linear system problem</title>
      <link>https://jlylekim.github.io/tag/quantum-linear-system-problem/</link>
    </image>
    
    <item>
      <title>A Catalyst Framework for the Quantum Linear System Problem via the Proximal Point Algorithm</title>
      <link>https://jlylekim.github.io/blog/qlsp-ppa/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://jlylekim.github.io/blog/qlsp-ppa/</guid>
      <description>&lt;!-- This blog post is about my recent work on distributed quantum state tomography using local stochastic factored gradient descent,[^kim2023local] published in [Control System Letters, IEEE 2023](https://ieeexplore.ieee.org/document/9810003). This is a joint work with my advisors [Prof. Tasos Kyrillidis](https://akyrillidis.github.io/about/) and [Prof. Cesar A. Uribe](https://cauribe.rice.edu/), and my good friend [Taha Toghani](https://sites.google.com/view/mttoghani). --&gt;
&lt;p&gt;This blog post is about my recent work on solving quantum linear system problem with (classical) proximal point method. This post is written with my advisor &lt;a href=&#34;https://akyrillidis.github.io/about/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Tasos Kyrillidis&lt;/a&gt;, and can also be found &lt;a href=&#34;https://akyrillidis.github.io/explore-quantum/QLSP_PPA.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. This is a joint work with &lt;a href=&#34;https://akyrillidis.github.io/about/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Tasos Kyrillidis&lt;/a&gt; and &lt;a href=&#34;https://sites.google.com/view/naihuichia/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Nai-Hui Chia&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Solving systems of linear equations is essential in numerous applications, from scientific computing to machine learning. Classical algorithms like Gaussian elimination and iterative methods scale poorly with the problem size, often rendering large-scale problems intractable. Quantum algorithms offer a potential breakthrough by reducing the dependence on the problem dimensions from polynomial to logarithmic, as demonstrated by the Harrow-Hassidim-Lloyd (HHL) algorithm. Nevertheless, the performance of quantum algorithms is severely impacted by the condition number $\kappa$ of the input matrix, which measures the sensitivity of the system to numerical errors. High-condition numbers can significantly degrade the efficiency of quantum solutions, a challenge we address in this study.&lt;/p&gt;
&lt;p&gt;Our approach leverages the classical proximal point algorithm (PPA), a method known for improving the conditioning of the problem in optimization tasks. By adapting the PPA to the quantum linear system problem (QLSP), we introduce a framework that enhances the performance of existing quantum linear system solvers. The key innovation lies in modifying the matrix to be inverted, thus reducing the effective condition number and improving convergence rates. This method can be seamlessly integrated with existing quantum solvers, providing a versatile tool for tackling a broader class of linear system problems.&lt;/p&gt;
&lt;h2 id=&#34;the-quantum-linear-system-problem-qlsp&#34;&gt;The Quantum Linear System Problem (QLSP)&lt;/h2&gt;
&lt;p&gt;The Quantum Linear System Problem (QLSP) aims to prepare a quantum state proportional to the solution vector $x^\star$ of a linear system $Ax=b$. This task is central to many quantum algorithms, including those for solving differential equations, machine learning, and optimization problems. Existing quantum algorithms, such as the HHL algorithm, achieve significant speedups over classical methods by reducing the complexity from polynomial to logarithmic in the problem dimension $N$. However, their performance is often limited by the condition number $\kappa$ of the matrix $A$.&lt;/p&gt;
&lt;p&gt;The condition number $\kappa$ is defined as the ratio of the largest to the smallest singular value of $A$. High-condition numbers indicate ill-conditioned systems that are susceptible to numerical errors, which can significantly slow down convergence and affect the final accuracy. Addressing this limitation is crucial for extending the applicability of quantum algorithms to real-world problems, which often involve ill-conditioned matrices.&lt;/p&gt;
&lt;p&gt;A proper definition of the QLSP problem is as follows:






  



  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jlylekim.github.io/blog/qlsp-ppa/def_hu415ed2a3b76a4b45357dd8f7776c07e5_426873_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jlylekim.github.io/blog/qlsp-ppa/def_hu415ed2a3b76a4b45357dd8f7776c07e5_426873_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;100%&#34; height=&#34;714&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Our proposed framework leverages the proximal point algorithm (PPA) to address this challenge. By iteratively refining the solution through a modified matrix inversion process, our approach effectively preconditions the system, reducing the impact of high-condition numbers. This approach not only improves convergence rates but also broadens the range of problems that quantum algorithms can efficiently solve.&lt;/p&gt;
&lt;h2 id=&#34;our-contributions&#34;&gt;Our Contributions&lt;/h2&gt;
&lt;p&gt;We present a novel meta-algorithmic framework that enhances the performance of existing quantum linear system solvers. Our contributions are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improved Condition Number:&lt;/strong&gt; Our method reduces the effective condition number from $\kappa$ to $\frac{\kappa(1+\eta)}{\kappa + \eta}$, where $\eta$ is a tunable parameter. This reduction alleviates the dependence of the algorithm on the condition number, leading to faster convergence.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flexibility:&lt;/strong&gt; The proposed framework is versatile, allowing different QLSP solvers to be used as subroutines. This flexibility enables users to choose the most appropriate solver for their specific problem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tunable Parameter $\eta$:&lt;/strong&gt; By carefully selecting the parameter $\eta$, users can balance the trade-off between runtime and approximation error, optimizing overall algorithmic complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our approach stands out by directly approximating the solution vector $x^\star = A^{-1} b$ through iterative refinement. This is in contrast to existing methods that focus on approximating the inverse of the coefficient matrix $A$. By inverting a (normalized) modified matrix $I + \eta A$, our algorithm effectively preconditions the system, resulting in a better-conditioned problem that converges more rapidly.&lt;/p&gt;
&lt;h2 id=&#34;algorithmic-and-theoretical-intuition&#34;&gt;Algorithmic and Theoretical Intuition&lt;/h2&gt;
&lt;p&gt;Our proposed algorithm employs the proximal point algorithm (PPA) to solve the QLSP. The core idea is to invert the (normalized) modified matrix $I + \eta A$ instead of the original matrix $A$, thus improving the system&amp;rsquo;s conditioning. The algorithm proceeds as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initialization:&lt;/strong&gt; Start with an initial guess $x_0 + \eta b$ for the solution vector.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Matrix Modification:&lt;/strong&gt; Modify the matrix $A$ to $\frac{I + \eta A}{|| I + \eta A ||}$.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refinement:&lt;/strong&gt; Apply any existing QLSP solver to invert the modified matrix and apply to the initial guess.&lt;/li&gt;
&lt;/ul&gt;






  



  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jlylekim.github.io/blog/qlsp-ppa/algo_hu415ed2a3b76a4b45357dd8f7776c07e5_424320_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jlylekim.github.io/blog/qlsp-ppa/algo_hu415ed2a3b76a4b45357dd8f7776c07e5_424320_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;100%&#34; height=&#34;726&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;The convergence rate and error bounds of our algorithm are rigorously analyzed. By carefully choosing the parameter $\eta$, the algorithm balances the trade-off between runtime and approximation error. Our theoretical analysis demonstrates that the proposed method achieves faster convergence and greater accuracy than existing quantum solvers, especially for ill-conditioned problems.&lt;/p&gt;
&lt;p&gt;We also provide a detailed complexity analysis, showing that our method significantly reduces the dependence on the condition number $\kappa$. Please check our paper for the complete and detailed theoretical analysis.&lt;/p&gt;
&lt;h2 id=&#34;empirical-observations-over-theory&#34;&gt;Empirical observations over theory&lt;/h2&gt;






  



  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jlylekim.github.io/blog/qlsp-ppa/query-scale_hu415ed2a3b76a4b45357dd8f7776c07e5_356304_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jlylekim.github.io/blog/qlsp-ppa/query-scale_hu415ed2a3b76a4b45357dd8f7776c07e5_356304_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;60%&#34; height=&#34;1464&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;In Figure 1, we show how the query complexity scales as a function of the condition number $\kappa$. The orangle line is the state-of-the-art QLSP solver based on the discrete adiabatic theorem. Simply by “wrapping” the original QLSP solver with our proposed method, the query complexity to achieve a fixed accuracy improves as $\kappa$ increases.&lt;/p&gt;






  



  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jlylekim.github.io/blog/qlsp-ppa/numerical_hu415ed2a3b76a4b45357dd8f7776c07e5_613796_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jlylekim.github.io/blog/qlsp-ppa/numerical_hu415ed2a3b76a4b45357dd8f7776c07e5_613796_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;100%&#34; height=&#34;1454&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;In Figure 2, we show, based on our theoretical analysis, the breakdown of the “improvement” and the “overhead” for two different QLSP solvers as subroutines.&lt;/p&gt;
&lt;h2 id=&#34;conclusions-and-future-work&#34;&gt;Conclusions and Future Work&lt;/h2&gt;
&lt;p&gt;Our proposed framework significantly alleviates the dependence on the condition number in solving the Quantum Linear System Problem (QLSP). By leveraging the proximal point algorithm (PPA), we introduce a meta-algorithm that enhances the performance of existing quantum solvers, broadening their applicability to more challenging, ill-conditioned problems.&lt;/p&gt;
&lt;p&gt;Future work will explore several promising directions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-step PPA Implementation:&lt;/strong&gt; Extending the algorithm to multi-step PPA implementations could further improve convergence rates and reduce runtime. This involves developing efficient methods for handling multiple iterations of the modified matrix inversion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warm Starting:&lt;/strong&gt; Investigating strategies for better initialization (warm starting) can lead to improved convergence. This may involve using prior knowledge about the solution or leveraging other quantum or classical solvers to provide a good starting point.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hybrid Approaches:&lt;/strong&gt; Combining our framework with other optimization techniques, such as quantum-inspired algorithms, could yield even more efficient solvers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our work opens new avenues for research in quantum computing and optimization, providing a robust foundation for developing more advanced algorithms that can tackle a wider range of problems.&lt;/p&gt;
&lt;!-- [^zeng2019]: J. Zeng, K. Ma, and Y. Yao. &#34;On global linear convergence in stochastic nonconvex optimization for semidefinite programming.&#34; IEEE Transactions on Signal Processing 67.16. 4261-4275. 2019,

[^bhojanapalli2016]: S. Bhojanapalli, A. Kyrillidis, S. Sanghavi. Dropping Convexity for Faster Semi-definite Optimization. 29th Annual Conference on Learning Theory, in Proceedings of Machine Learning Research. 49:530-582. 2016.

[^lan2020]: Guanghui Lan, Soomin Lee, and Yi Zhou. Communication-efficient algorithms for decentralized and stochastic optimization. Mathematical Programming 180.1-2. 237-284. 2020.

[^kim2023local]: J. L. Kim, M. T. Toghani, C. A. Uribe and A. Kyrillidis. Local Stochastic Factored Gradient Descent for Distributed Quantum State Tomography. IEEE Control Systems Letters, vol. 7, pp. 199-204, 2023. --&gt;
</description>
    </item>
    
  </channel>
</rss>
